version: "3.9"

services:
  api:
    build:
      context: .
    ports:
      - 80:8000
    depends_on:
      migration:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
    volumes:
      - ./.env_docker:/app/.env

  migration:
    build:
      context: .
    environment:
      - DOCKER_DEFAULT_PLATFORM=${DOCKER_DEFAULT_PLATFORM}
    depends_on:
      postgres:
        condition: service_healthy
    command: python manage.py migrate
    volumes:
      - ./.env_docker:/app/.env

  postgres:
    image: postgres:latest
    env_file:
      - .env_docker
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data


volumes:
  postgres_data: